[{"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/index.js":"1","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reportWebVitals.js":"2","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers.js":"3","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/App.js":"4","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/login/index.js":"5","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/register/index.js":"6","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/preferences/index.js":"7","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/userSettings/index.js":"8","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/modals/index.js":"9","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/login/index.js":"10","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/nav/index.js":"11","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/AuthenticationModal/index.js":"12","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/home/index.js":"13","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/ingredientAutocomplete/index.js":"14","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/notFound/index.js":"15","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/searchButton/index.js":"16","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/logo/index.js":"17","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/config/api.js":"18","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/preferences/list.js":"19","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/fridge/index.js":"20","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/preferences/index.js":"21","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/logged-in/index.js":"22","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/utils/get-user-preferences/index.js":"23","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/services/authServices.js":"24","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/browseRecipes/index.js":"25","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/singleRecipe/index.js":"26","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/savedRecipes/index.js":"27","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/pantry/index.js":"28","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/userInfo/index.js":"29","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/footer/index.js":"30","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/utils/notifications.js":"31"},{"size":965,"mtime":1608640525394,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1607657595793,"results":"34","hashOfConfig":"33"},{"size":347,"mtime":1608872670651,"results":"35","hashOfConfig":"33"},{"size":3286,"mtime":1609050793290,"results":"36","hashOfConfig":"33"},{"size":993,"mtime":1608873552561,"results":"37","hashOfConfig":"33"},{"size":5163,"mtime":1609049811372,"results":"38","hashOfConfig":"33"},{"size":4568,"mtime":1609056681893,"results":"39","hashOfConfig":"33"},{"size":6617,"mtime":1609056626579,"results":"40","hashOfConfig":"33"},{"size":459,"mtime":1608640525396,"results":"41","hashOfConfig":"33"},{"size":3817,"mtime":1609051127125,"results":"42","hashOfConfig":"33"},{"size":5952,"mtime":1609051982984,"results":"43","hashOfConfig":"33"},{"size":1507,"mtime":1607986905544,"results":"44","hashOfConfig":"33"},{"size":1362,"mtime":1608856509865,"results":"45","hashOfConfig":"33"},{"size":1200,"mtime":1609114393234,"results":"46","hashOfConfig":"33"},{"size":336,"mtime":1608640525389,"results":"47","hashOfConfig":"33"},{"size":430,"mtime":1609051524835,"results":"48","hashOfConfig":"33"},{"size":262,"mtime":1608640525386,"results":"49","hashOfConfig":"33"},{"size":225,"mtime":1608781330383,"results":"50","hashOfConfig":"33"},{"size":210,"mtime":1608640525390,"results":"51","hashOfConfig":"33"},{"size":1393,"mtime":1609114443645,"results":"52","hashOfConfig":"33"},{"size":856,"mtime":1608883193562,"results":"53","hashOfConfig":"33"},{"size":924,"mtime":1608881541288,"results":"54","hashOfConfig":"33"},{"size":212,"mtime":1608685391169,"results":"55","hashOfConfig":"33"},{"size":2831,"mtime":1608874058320,"results":"56","hashOfConfig":"33"},{"size":341,"mtime":1609056837293,"results":"57","hashOfConfig":"33"},{"size":338,"mtime":1609056893278,"results":"58","hashOfConfig":"33"},{"size":350,"mtime":1609056871980,"results":"59","hashOfConfig":"33"},{"size":322,"mtime":1609056801814,"results":"60","hashOfConfig":"33"},{"size":580,"mtime":1608872837724,"results":"61","hashOfConfig":"33"},{"size":309,"mtime":1608874364906,"results":"62","hashOfConfig":"33"},{"size":712,"mtime":1609050819108,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"8oth7u",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"67"},"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/index.js",["137"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { Provider } from \"react-redux\";\n\n// const store = createStore(rootReducer);\n\nconst store = createStore(\n  rootReducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconsole.log(\"STORE\", store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nconsole.log(\"INDEX JS STORE\", store.getState());\n\nexport default store;\n",["138","139"],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reportWebVitals.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/App.js",["140","141","142","143","144"],"import { connect } from \"react-redux\";\nimport React, { Fragment,useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport { userAuthenticated, setLoggedInUser, getLoggedInUser, getUsername, setUsername } from \"./services/authServices\"\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport notify from \"./utils/notifications.js\";\n\n// import \"./App.css\";\n// import Modal from \"react-modal\";\n// import styles from \"./components/styles/app.module.css\";\n// import AuthenticationModal from \"./components/AuthenticationModal\";\nimport store from \"./index\";\nimport UserSettings from \"./components/userSettings\";\nimport Preferences from \"./components/preferences\";\nimport BrowseRecipes from \"./components/browseRecipes\";\nimport SavedRecipes from \"./components/savedRecipes\";\nimport SingleRecipe from \"./components/singleRecipe\";\nimport NotFound from \"./components/notFound\";\nimport Nav from \"./components/nav\";\nimport Home from \"./components/home\";\nimport Fridge from \"./components/fridge\";\nimport Pantry from \"./components/pantry\";\nimport Footer from \"./components/footer\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst App = ({ actions }) => {\n\n  \n  useEffect(() => {\n    try {\n      actions.logIn(getUsername())\t\n      actions.getToken(getLoggedInUser())\t \n    \n    } catch (error) {\n      console.log(\"got an error trying to check authenticated user:\", error)\n      setLoggedInUser(null) \n      setUsername(null)\n      actions.logout()\n\n    }\n    // return a function that specifies any actions on component unmount\n    return () => {}\n  },[])\n  return (\n    <Fragment>\n      <Helmet>\n        <title>FridgeMate</title>\n        <meta name=\"description\" content=\"Helmet application\" />\n      </Helmet>\n      <CssBaseline />\n      <BrowserRouter>\n        <Nav />\n        <Switch> \n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/preferences/:username\" component={Preferences}/>\n          <Route exact path=\"/user/:username/account-settings\" component={UserSettings}/>\n          <Route exact path=\"/ingredients/:username/fridge\" component={Fridge}/>\n          <Route exact path=\"/recipes/browse\" component={BrowseRecipes} />\n          <Route exact path=\"/recipes/:id\" component={SingleRecipe} />\n          <Route exact path=\"/recipes/saved-recipes\" component={SavedRecipes} />\n          <Route exact path=\"/ingredients/:username/pantry\" component={Pantry} />\n          <Route component={NotFound} />\n        </Switch>\n        <ToastContainer />\n      </BrowserRouter>\n      <Footer/>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userLoggedIn: state.userLoggedIn.username,\n \n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    setModalOpen: (modalId) => {\n      store.dispatch({ type: \"openModal\", payload: modalId });\n      console.log(\"APP JS STORE\", store.getState());\n    },\n    logIn: (username ) =>\n      dispatch({ type: \"login\", payload: username}),\n    getToken: ( jwt ) =>\n      dispatch({ type: \"token\", payload:  jwt  }),\n    logout: () => dispatch({ type: \"logout\" }),\n   \n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/login/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/register/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/preferences/index.js",["145","146","147","148","149","150","151"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ReactDOM from \"react-dom\";\nimport { Formik, Field, Form, useFormik } from \"formik\";\nimport preferencesList from \"./list\";\nimport api from \"../../config/api\";\nimport getUserPreferences from \"../../utils/get-user-preferences\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Logo from \"../logo\";\nimport styles from \"./preferences.module.css\";\nimport appstyles from \"../../app.module.css\";\nimport {getPreference, updatePreference ,getUsername, setUsername } from '../../services/authServices'\n\n\n\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n\n//need to write input validation - boolean only\nconst validate = (values) => {\n  const errors = {};\n  return errors;\n};\n\n// preferences component, is passed:\n// userPreferences which is state?\n// actions: which is submit (to db) and get payload/data from db.\nconst Preferences = ({ actions, userPreferences, userLoggedIn}) => {\n\n  // On page load- This is calling the DB get request to get the initial user preference data\n  useEffect(() => {\n    getPreference(getUsername()).then((pref) => {\n      actions.updatePreferences( { ...pref })\n  }).then(() => {console.log(userPreferences)\n }).catch((error) => {\n      console.log(\"errors\")\n      console.log(error.response)\n      if (error.response && error.response.status === 404)\n      formik.setStatus(\"Error getting pref information \")\n      else   \n      formik.setStatus(\"There may be a problem with the server. Please try again after a few moments.\")\n  })\n},[])\n\n  const formik = useFormik({\n    //calls boolean validation\n    validate,\n\n   // This is calling the DB patch request to update the initial user preference data\n    onSubmit: (values) => {\n      //alert(JSON.stringify(values, null, 2));\n      updatePreference({ ...values }, userLoggedIn).then((pref) => {\n        console.log(pref)\n        actions.updatePreferences( { ...pref })\n    }).catch((error) => {\n      //console.log(\"errors\")\n      //console.log(error.response)\n      if (error.response && error.response.status === 404)\n      formik.setStatus(\"Error getting pref information \")\n      else   \n      formik.setStatus(\"There may be a problem with the server. Please try again after a few moments.\")\n    })\n    },\n  });\n\n  //if no userPreferences (preferences in state returned from db) then show no selections\n  if (!userPreferences.preferences) {\n    return null;\n  }\n\n  return (\n    // the form and HTML\n    <div class={appstyles.layout}>\n        <Logo />\n      <div class={appstyles.layoutContent}>\n      <div className={styles.prefBox}>\n    <Logo/>\n      <h1>User Preferences</h1>\n      {formik.status && (\n          <div>Error: {formik.status}. </div>\n        )}\n      <Formik\n        initialValues={Object.fromEntries(\n          preferencesList.map((preference) => [\n            preference,\n            userPreferences.preferences[preference] || false,\n          ])\n        )}\n        onSubmit={async (values) => {\n          await sleep(500);\n          // actions.submit;\n          //needs to submit to database first, then need to update local state from database. Load on log in?? Can be slower but I don't think users can really doing anything else - they'll need the data immediately..\n          alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        {({ values }) => (\n          <Form>\n            {/* form maps over list in ./list.js, can update more easily if needed */}\n            {preferencesList.map((preference, index) => (\n              <label key={index}>\n                <Field type=\"checkbox\" name={preference} />\n                {/*<Checkbox/>*/}\n                {preference}\n              </label>\n            ))}\n            {/* what was the name of your preference name tag on the checkbox? Preferences? plural? */}\n            {/* so the reqest will be req.body.preference ? */}\n            <button type=\"submit\" onClick={formik.handleSubmit}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n      </div>\n    </div>\n    </div>\n  );\n};\n\n//checks state\nconst mapStateToProps = (state) => ({\n  userPreferences: state.userPreferences,\n  userLoggedIn: state.userLoggedIn.username,\n});\n\n//updates state\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    updatePreferences: (data) =>\n      dispatch({ type: \"updatePreferences\", payload: data }),\n    submit: () => dispatch({ type: \"submit\" }),\n  },\n});\n\n//sends to reducer\nexport default connect(mapStateToProps, mapDispatchToProps)(Preferences);\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/userSettings/index.js",["152","153"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport styles from \"./userSettings.module.css\";\nimport appstyles from \"../../app.module.css\";\nimport {getUserSettings, updateUserSettings ,getUsername, setUsername } from '../../services/authServices'\nimport Logo from \"../logo\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n//MATERIAL\nimport Button from '@material-ui/core/Button';\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"Required\";\n  } else if (values.username.length > 15) {\n    errors.username = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n      values.password\n    )\n  ) {\n    errors.password =\n      \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n      values.confirmPassword\n    )\n  ) {\n    errors.confirmPassword =\n      \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match.\";\n  }\n\n  return errors;\n};\n\nconst UserSettings = ({ actions, currentUserSettings, userLoggedIn}) => {\n\n  useEffect(() => {\n    getUserSettings(getUsername()).then((user) => {\n      actions.settings(user)\n  }).then(() => {console.log(currentUserSettings)\n }).catch((error) => {\n      console.log(\"errors\")\n      console.log(error.response)\n      if (error.response && error.response.status === 404)\n      formik.setStatus(\"Error getting user information \")\n      else   \n      formik.setStatus(\"There may be a problem with the server. Please try again after a few moments.\")\n  })\n \n  },[])\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n\n      email: \"\",\n\n      password: \"\",\n\n      confirmPassword: \"\",\n\n      file: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      //alert(JSON.stringify(values, null, 2));\n      updateUserSettings({ ...values }, userLoggedIn).then((user) => {\n        console.log(user)\n        actions.settings( { ...user })\n        actions.updateUsername(user.username)\n        setUsername(user.username)\n    }).catch((error) => {\n      //console.log(\"errors\")\n      //console.log(error.response)\n      if (error.response && error.response.status === 404)\n      formik.setStatus(\"Error getting user information \")\n      else   \n      formik.setStatus(\"There may be a problem with the server. Please try again after a few moments.\")\n    })\n    },\n  });\n\n  return (\n    <div class={appstyles.layout}>\n        <Logo />\n      <div class={appstyles.layoutContent}>\n      <div className={styles.settingsBox}>\n  \n      {formik.status && (\n          <div>Error: {formik.status}. </div>\n        )}\n      <h1>User Settings:</h1>\n      <div>\n      {currentUserSettings.profile ? (<img src={currentUserSettings.profile} width=\"20%\"/>) : (\n          <AccountCircleIcon/>\n          )}\n      </div>\n      \n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"photo\">Photo</label>\n\n        <input\n          id=\"file\"\n          name=\"file\"\n          type=\"file\"\n          onChange={(event) => {\n            formik.setFieldValue(\"file\", event.currentTarget.files[0]);\n          }}\n          //not sure what this does\n          // https://stackoverflow.com/questions/56149756/reactjs-how-to-handle-image-file-upload-with-formik\n          onSubmit={(values) => {\n            console.log({\n              fileName: values.file.username,\n              type: values.file.type,\n              size: `${values.file.size} bytes`,\n            });\n          }}\n        />\n\n        <label htmlFor=\"username\">Username</label>\n\n        <input\n          id=\"userSettingsName\"\n          name=\"username\"\n          type=\"text\"\n          placeholder={currentUserSettings.username}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        />\n\n        {formik.touched.username && formik.errors.username ? (\n          <div>{formik.errors.username}</div>\n        ) : null}\n\n        <label htmlFor=\"email\">Email Address</label>\n\n        <input\n          id=\"userSettingsEmail\"\n          name=\"email\"\n          type=\"email\"\n          placeholder={currentUserSettings.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          id=\"userSettingsPassword\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n\n        <label htmlFor=\"confirmPassword\">Password</label>\n\n        <input\n          id=\"userSettingsConfirmPassword\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.confirmPassword}\n        />\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n          <div>{formik.errors.confirmPassword}</div>\n        ) : null}\n\n        <Button className={styles.updateButton} type=\"submit\">Update Details</Button>\n      </form>\n\n      </div>\n    </div>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = (state) => ({\n  currentUserSettings: state.currentUserSettings,\n  userLoggedIn: state.userLoggedIn.username,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    settings: ({email, username, profile}) =>\n      dispatch({ type: \"settings\", payload: {email, username, profile}}),\n    updateUsername: (username ) =>\n      dispatch({ type: \"updateUsername\", payload: username}),\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettings);\n\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/modals/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/login/index.js",["154","155","156"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport styles from \"../styles/loginSignup.module.css\";\n// import store from \"../../index\";\nimport {loginUser, setLoggedInUser, setUsername} from '../../services/authServices'\nimport { useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport notify from \"../../utils/notifications.js\";\n\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\n\nconst Login = ({ actions, loggedIn,modalId}) => {\n  let history = useHistory();\n  \n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validate,\n\n    onSubmit: async (values) => {\n      loginUser({ ...values }).then((r) => {\n        console.log(r)\n        setLoggedInUser(r.cookie.jwt)\n        setUsername(r.user)\n        actions.logIn(r.user)\n        actions.getToken(r.cookie.jwt)\n        actions.closeModal() \n    \n        //console.log(getLoggedInUser())\n       // console.log(\"aa\")\n       // console.log(loggedIn)\n        history.push(\"/\")\n        //console.log(document.cookie)\n    }).catch((error) => {\n      //console.log(\"errors\")\n      //console.log(error.response)\n        if (error.response && error.response.status === 401)\n        formik.setStatus(\"Authentication failed. Please check your username and password.\")\n        else   \n        formik.setStatus(\"There may be a problem with the server. Please try again after a few moments.\")\n    })\t\n    },\n  });\n\n  return (\n    <div class={styles.loginSignupBox}>\n      <h1>Login</h1>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"email\">Email </label>\n        {formik.status && (\n          <div>Error: {formik.status}. Please try signing in again.</div>\n        )}\n        <input\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          class=\"loginEmail\"\n          placeholder=\"Email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n        <label htmlFor=\"password\">Password</label>\n        <input\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          class=\"loginPassword\"\n          placeholder=\"Enter Password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n        <div>\n          <button\n            class={styles.loginSignupButtons}\n            type=\"submit\"\n            onClick={formik.handleSubmit, notify}\n          >\n            Log In\n          </button>\n        </div>\n      </form>\n   \n      \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.userLoggedIn.username,\n  modalId: state.modalOpen.modal,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    logIn: (username ) =>\n      dispatch({ type: \"login\", payload: username }),\n    getToken: (jwt ) =>\n      dispatch({ type: \"token\", payload: jwt }),\n    logout: () => dispatch({ type: \"logout\" }),\n    openModal: (modalId) => dispatch({ type: \"openModal\", payload: modalId }),\n     closeModal: () => dispatch({ type: \"closeModal\" }),\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/nav/index.js",["157","158","159","160","161","162","163","164","165"],"import React, { Fragment } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport { useHistory } from \"react-router-dom\";\n\nimport styles from \"./nav.module.css\";\n\nimport SearchRecipeButton from \"../searchButton\";\nimport AuthenticationModal from \"../AuthenticationModal\";\nimport {logoutUser} from '../../services/authServices'\n\n\n//MATERIAL\nimport Button from '@material-ui/core/Button';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n\n//IMAGES-icons\nimport fridge from \"../styles/imgs/fridge.png\";\nimport pantry from \"../styles/imgs/pantry.png\";\nimport pref from \"../styles/imgs/preference.png\";\nimport list from \"../styles/imgs/list.png\";\n\n//FOOD IMAGES\nimport carrot from \"../styles/imgs/carrot.png\";\nimport chilli from \"../styles/imgs/chilli.png\";\nimport corn from \"../styles/imgs/corn.png\";\nimport egg from \"../styles/imgs/egg.png\";\nimport garlic from \"../styles/imgs/garlic.png\";\nimport radish from \"../styles/imgs/radish.png\";\nimport ramen from \"../styles/imgs/ramen.png\";\nimport tomato from \"../styles/imgs/tomato.png\";\n\nconst NavBar = ({ actions, userLoggedIn, currentUserSettings}) => {\n  let history = useHistory();\n  const { setModalOpen } = actions;\n  const listFoodImg = [\n    carrot,\n    chilli,\n    corn,\n    egg,\n    garlic,\n    radish,\n    ramen,\n    tomato,\n  ];\n  let randomFoodImg =\n    listFoodImg[Math.floor(Math.random() * listFoodImg.length)];\n\n\n  function handleLogout() {\n      logoutUser().then((response) => {\n          console.log(\"Got back response on logout\", response.status)\n          history.push(\"/\")\n      }).catch ((error) => {\n          console.log(\"The server may be down - caught an exception on logout:\", error)\n      })\n      // Even if we catch an error, logout the user locally\n      // Remove the token from localStorage\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"username\")\n      actions.logout()\n  }\n\n  return (\n    <div class={styles.navBox}>\n      <AuthenticationModal />\n      <a class={styles.trigger}>\n        <i>\n          <MoreVertIcon />\n        </i>\n      </a>\n      <nav class={styles.nav}>\n        <ul>\n      \n        {/* <List disablePadding dense>\n            <ListItem button>\n            <img alt=\"Fridge\" src={fridge} width=\"20%\"/>\n              <ListItemText>My Fridge</ListItemText>\n            </ListItem>\n            <ListItem button>\n            <img alt=\"Fridge\" src={pantry} width=\"20%\"/>\n              <ListItemText>My Pantry</ListItemText>\n            </ListItem>\n            <ListItem button>\n            <img alt=\"Fridge\" src={list} width=\"20%\"/>\n              <ListItemText>Saved Recipes</ListItemText>\n            </ListItem>\n            <ListItem button>\n            <img alt=\"Fridge\" src={pref} width=\"20%\"/>\n              <ListItemText>My Preferences</ListItemText>\n            </ListItem>\n        </List> */}\n                <li>\n                  <Link to={\"/user/\"+userLoggedIn+\"/account-settings\"}>\n                    <div class={styles.userProfile}>\n                    {currentUserSettings.profile ? (<img  alt=\"Users profile image\"  src={currentUserSettings.profile} />) : (\n          <AccountCircleIcon  fontSize=\"large\"/>)}\n                      {userLoggedIn? (<div>{userLoggedIn}</div>) : (<div></div>)}\n                    </div>\n                  </Link>\n                </li>\n          <li>\n            <SearchRecipeButton />\n            <a class={styles.navLink}></a>\n          </li>\n          <li>\n            <Link\n              to={\"/ingredients/\"+userLoggedIn+\"/fridge\"}\n              class={styles.navLink}\n            >\n              <img alt=\"Fridge\" src={fridge} />\n              <div>My Fridge</div>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={\"/ingredients/\"+userLoggedIn+\"/pantry\"}\n              class={styles.navLink}\n            >\n              <img alt=\"Pantry\" src={pantry} />\n              <div>Pantry Staples</div>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/recipes/saved-recipes\" class={styles.navLink}>\n              <img alt=\"list\" src={list} />\n              <div>Saved Recipes</div>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={\"/preferences/\"+userLoggedIn}\n              class={styles.navLink}\n            >\n              <img alt=\"preference\" src={pref} />\n              <div> My Preferences</div>\n            </Link>\n          </li>\n          <li class={styles.foodPic}>\n            <img alt=\"picture of food\" src={randomFoodImg} />\n          </li>\n          <li class={styles.navButtons}>\n            <Fragment>\n              {userLoggedIn ? (\n                <Fragment>\n                  {\" \"}\n                  <Button variant=\"outlined\" onClick={ handleLogout} >Log out</Button>\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <Button variant=\"outlined\" onClick={() => setModalOpen(\"login\")} >Login</Button>\n                  <Button variant=\"outlined\" onClick={() => setModalOpen(\"register\")} >Register</Button>\n                </Fragment>\n              )}\n            </Fragment>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userLoggedIn: state.userLoggedIn.username,\n  currentUserSettings: state.currentUserSettings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    setModalOpen: (modalId) => {\n      dispatch({ type: \"openModal\", payload: modalId });\n    },\n    logIn: () => dispatch({ type: \"login\" }),\n    logout: () => dispatch({ type: \"logout\" }),\n  },\n});\n\n// export default navBar;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/AuthenticationModal/index.js",["166"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport Login from \"../login\";\nimport Register from \"../register\";\n\nconst AuthenticationModal = ({ actions, modalId }) => {\n  const { closeModal, openModal } = actions;\n\n  const logInRegisterModals = {\n    register: <Register />,\n    login: <Login />,\n  };\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  return (\n    <Modal\n      isOpen={typeof modalId === \"string\"}\n      onRequestClose={closeModal}\n      style={customStyles}\n      ariaHideApp={false}\n      contentLabel=\"Log In\"\n    >\n      {modalId && logInRegisterModals[modalId]}\n      <button class=\"modalLoginButton\" onClick={() => openModal(\"login\")}>\n        Login\n      </button>\n      <button class=\"modalRegisterButton\" onClick={() => openModal(\"register\")}>\n        Register\n      </button>\n      <button class=\"modalCancelButton\" onClick={closeModal}>\n        Cancel\n      </button>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  modalId: state.modalOpen.modal,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    openModal: (modalId) => dispatch({ type: \"openModal\", payload: modalId }),\n    closeModal: () => dispatch({ type: \"closeModal\" }),\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthenticationModal);\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/home/index.js",["167","168","169","170","171","172","173","174"],"import { connect } from \"react-redux\";\nimport React, { Fragment } from \"react\";\n\nimport UserSettings from \"../userSettings\";\nimport Preferences from \"../preferences\";\nimport LoggedIn from \"../logged-in\";\nimport AuthenticationModal from \"../AuthenticationModal\";\nimport { BorderBottom } from \"@material-ui/icons\";\nimport SearchRecipeButton from \"../searchButton\";\nimport AutocompleteIngredients from \"../ingredientAutocomplete\";\nimport styles from \"./home.module.css\";\nimport Logo from \"../logo\";\n\nconst Home = ({ actions, userLoggedIn }) => {\n  const { setModalOpen } = actions;\n  return (\n    <div className={styles.homeLayoutOnly}>\n      <Logo />\n      <main className={` ${styles.homeContent}`}>\n        <div className={styles.homeBox}>\n          <p>Random Food Jokes API</p>\n          <h1>What is in your fridge?</h1>\n          <h3>\n            Just add your ingredients and FridgeMate will help find recipes\n            personlised to you!\n          </h3>\n          <SearchRecipeButton />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userLoggedIn: state.userLoggedIn.username,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    setModalOpen: (modalId) => {\n      dispatch({ type: \"openModal\", payload: modalId });\n    },\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/ingredientAutocomplete/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/notFound/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/searchButton/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/logo/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/config/api.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/preferences/list.js",["175"],"import React from \"react\";\n\nconst preferencesList = [\n  \"vegetarian\",\n  \"vegan\",\n  \"glutenFree\",\n  \"dairyFree\",\n  \"veryHealthy\",\n  \"cheap\",\n  \"veryPopular\",\n  \"sustainable\",\n];\n\nexport default preferencesList;\n","/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/fridge/index.js",["176","177","178","179","180","181","182"],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/preferences/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/logged-in/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/utils/get-user-preferences/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/services/authServices.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/browseRecipes/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/singleRecipe/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/savedRecipes/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/pantry/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/reducers/userInfo/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/components/footer/index.js",[],"/Users/shelbyd/CODING/CA/Assignments/T3A2_MERN/client/src/utils/notifications.js",["183"],"import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notify = () => {\n    toast(\"Default Notification !\");\n\n    toast.success(\"Success Notification !\", {\n      position: toast.POSITION.TOP_CENTER\n    });\n\n    toast.error(\"Error Notification !\", {\n      position: toast.POSITION.TOP_LEFT\n    });\n\n    toast.warn(\"Warning Notification !\", {\n      position: toast.POSITION.BOTTOM_LEFT\n    });\n\n    toast.info(\"Info Notification !\", {\n      position: toast.POSITION.BOTTOM_CENTER\n    });\n\n    toast(\"Custom Style Notification with css class!\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      className: 'foo-bar'\n    });\n  };\n\n\n  export default notify\n\n",{"ruleId":"184","severity":1,"message":"185","line":6,"column":23,"nodeType":"186","messageId":"187","endLine":6,"endColumn":30},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"184","severity":1,"message":"192","line":4,"column":40,"nodeType":"186","messageId":"187","endLine":4,"endColumn":48},{"ruleId":"184","severity":1,"message":"193","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":27},{"ruleId":"184","severity":1,"message":"194","line":8,"column":26,"nodeType":"186","messageId":"187","endLine":8,"endColumn":31},{"ruleId":"184","severity":1,"message":"195","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":48,"column":5,"nodeType":"198","endLine":48,"endColumn":7,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":1,"column":28,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"201","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":16},{"ruleId":"184","severity":1,"message":"202","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":11},{"ruleId":"184","severity":1,"message":"203","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":26},{"ruleId":"184","severity":1,"message":"204","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":16},{"ruleId":"184","severity":1,"message":"205","line":13,"column":55,"nodeType":"186","messageId":"187","endLine":13,"endColumn":66},{"ruleId":"196","severity":1,"message":"206","line":43,"column":3,"nodeType":"198","endLine":43,"endColumn":5,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":70,"column":5,"nodeType":"198","endLine":70,"endColumn":7,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":115,"column":39,"nodeType":"212","endLine":115,"endColumn":91},{"ruleId":"184","severity":1,"message":"213","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":24},{"ruleId":"184","severity":1,"message":"194","line":8,"column":26,"nodeType":"186","messageId":"187","endLine":8,"endColumn":31},{"ruleId":"214","severity":1,"message":"215","line":102,"column":41,"nodeType":"216","messageId":"217","endLine":102,"endColumn":42},{"ruleId":"184","severity":1,"message":"218","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":13},{"ruleId":"184","severity":1,"message":"219","line":17,"column":8,"nodeType":"186","messageId":"187","endLine":17,"endColumn":12},{"ruleId":"184","severity":1,"message":"220","line":18,"column":8,"nodeType":"186","messageId":"187","endLine":18,"endColumn":16},{"ruleId":"184","severity":1,"message":"221","line":19,"column":8,"nodeType":"186","messageId":"187","endLine":19,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":73,"column":7,"nodeType":"212","endLine":73,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":102,"column":53,"nodeType":"212","endLine":102,"endColumn":122},{"ruleId":"226","severity":1,"message":"227","line":110,"column":13,"nodeType":"212","endLine":110,"endColumn":39},{"ruleId":"222","severity":1,"message":"223","line":110,"column":13,"nodeType":"212","endLine":110,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":146,"column":13,"nodeType":"212","endLine":146,"endColumn":62},{"ruleId":"184","severity":1,"message":"200","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"228","line":2,"column":17,"nodeType":"186","messageId":"187","endLine":2,"endColumn":25},{"ruleId":"184","severity":1,"message":"229","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"184","severity":1,"message":"230","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":19},{"ruleId":"184","severity":1,"message":"231","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":16},{"ruleId":"184","severity":1,"message":"232","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":27},{"ruleId":"184","severity":1,"message":"233","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":22},{"ruleId":"184","severity":1,"message":"234","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":31},{"ruleId":"184","severity":1,"message":"235","line":15,"column":11,"nodeType":"186","messageId":"187","endLine":15,"endColumn":23},{"ruleId":"184","severity":1,"message":"236","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"228","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"237","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":17},{"ruleId":"184","severity":1,"message":"238","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"239","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":17},{"ruleId":"184","severity":1,"message":"240","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":40,"column":3,"nodeType":"243","messageId":"244","endLine":46,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":40,"column":3,"nodeType":"243","messageId":"247","endLine":46,"endColumn":19},{"ruleId":"184","severity":1,"message":"213","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":24},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["248"],"no-negated-in-lhs",["249"],"'Redirect' is defined but never used.","'userAuthenticated' is defined but never used.","'toast' is defined but never used.","'notify' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.","ArrayExpression",["250"],"'useState' is defined but never used.","'ReactDOM' is defined but never used.","'api' is defined but never used.","'getUserPreferences' is defined but never used.","'Checkbox' is defined but never used.","'setUsername' is defined but never used.","React Hook useEffect has missing dependencies: 'actions', 'formik', and 'userPreferences'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'actions', 'currentUserSettings', and 'formik'. Either include them or remove the dependency array.",["252"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ToastContainer' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Modal' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'Fragment' is defined but never used.","'UserSettings' is defined but never used.","'Preferences' is defined but never used.","'LoggedIn' is defined but never used.","'AuthenticationModal' is defined but never used.","'BorderBottom' is defined but never used.","'AutocompleteIngredients' is defined but never used.","'setModalOpen' is assigned a value but never used.","'React' is defined but never used.","'connect' is defined but never used.","'useFormik' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [actions]",{"range":"259","text":"260"},"Update the dependencies array to be: [actions, formik, userPreferences]",{"range":"261","text":"262"},"Update the dependencies array to be: [actions, currentUserSettings, formik]",{"range":"263","text":"264"},[1700,1702],"[actions]",[1576,1578],"[actions, formik, userPreferences]",[2265,2267],"[actions, currentUserSettings, formik]"]