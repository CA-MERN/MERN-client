{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nconst SignupForm = () => {\n  _s();\n\n  // Notice that we have to initialize ALL of fields with values. These\n  // could come from props, but since we don't want to prefill this form,\n  // we just use an empty string. If you don't do this, React will yell\n  // at you.\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignupForm;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js"],"names":["React","useFormik","SignupForm","formik","initialValues","firstName","lastName","email","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","Register"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,QAA1B;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB;AAEA;AAEA;AAEA;AAEA,QAAMC,MAAM,GAAGF,SAAS,CAAC;AAEvBG,IAAAA,aAAa,EAAE;AAEbC,MAAAA,SAAS,EAAE,EAFE;AAIbC,MAAAA,QAAQ,EAAE,EAJG;AAMbC,MAAAA,KAAK,EAAE;AANM,KAFQ;AAYvBC,IAAAA,QAAQ,EAAEC,MAAM,IAAI;AAElBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AAED;AAhBsB,GAAD,CAAxB;AAoBA,sBAEE;AAAM,IAAA,QAAQ,EAAEN,MAAM,CAACU,YAAvB;AAAA,4BAEE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAEE,MAAA,EAAE,EAAC,WAFL;AAIE,MAAA,IAAI,EAAC,WAJP;AAME,MAAA,IAAI,EAAC,MANP;AAQE,MAAA,QAAQ,EAAEV,MAAM,CAACW,YARnB;AAUE,MAAA,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcJ;AAVvB;AAAA;AAAA;AAAA;AAAA,YAJF,eAkBE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAoBE;AAEE,MAAA,EAAE,EAAC,UAFL;AAIE,MAAA,IAAI,EAAC,UAJP;AAME,MAAA,IAAI,EAAC,MANP;AAQE,MAAA,QAAQ,EAAEF,MAAM,CAACW,YARnB;AAUE,MAAA,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcH;AAVvB;AAAA;AAAA;AAAA;AAAA,YApBF,eAkCE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCF,eAoCE;AAEE,MAAA,EAAE,EAAC,OAFL;AAIE,MAAA,IAAI,EAAC,OAJP;AAME,MAAA,IAAI,EAAC,OANP;AAQE,MAAA,QAAQ,EAAEH,MAAM,CAACW,YARnB;AAUE,MAAA,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcF;AAVvB;AAAA;AAAA;AAAA;AAAA,YApCF,eAkDE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA6DA,CA3FF;;GAAML,U;UAUWD,S;;;KAVXC,U;AA6FL,eAAea,QAAf","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\n\n\n\nconst SignupForm = () => {\n\n  // Notice that we have to initialize ALL of fields with values. These\n\n  // could come from props, but since we don't want to prefill this form,\n\n  // we just use an empty string. If you don't do this, React will yell\n\n  // at you.\n\n  const formik = useFormik({\n\n    initialValues: {\n\n      firstName: '',\n\n      lastName: '',\n\n      email: '',\n\n    },\n\n    onSubmit: values => {\n\n      alert(JSON.stringify(values, null, 2));\n\n    },\n\n  });\n\n  return (\n\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"firstName\">First Name</label>\n\n      <input\n\n        id=\"firstName\"\n\n        name=\"firstName\"\n\n        type=\"text\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.firstName}\n\n      />\n\n      <label htmlFor=\"lastName\">Last Name</label>\n\n      <input\n\n        id=\"lastName\"\n\n        name=\"lastName\"\n\n        type=\"text\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.lastName}\n\n      />\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\n        id=\"email\"\n\n        name=\"email\"\n\n        type=\"email\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.email}\n\n      />\n\n      <button type=\"submit\">Submit</button>\n\n    </form>\n\n\n\n );\n\n\n };\n\n export default Register;"]},"metadata":{},"sourceType":"module"}