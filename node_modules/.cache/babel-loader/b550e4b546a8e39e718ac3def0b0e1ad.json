{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/userSettings/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (values.name.length > 15) {\n    errors.name = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n    errors.password = \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n    errors.confirmPassword = \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match.\";\n  }\n\n  return errors;\n};\n\nconst UserSettings = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      file: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Settings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"photo\",\n        children: \"Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file\",\n        name: \"file\",\n        type: \"file\",\n        onChange: event => {\n          formik.setFieldValue(\"file\", event.currentTarget.files[0]);\n        },\n        onSubmit: values => {\n          console.log({\n            fileName: values.file.name,\n            type: values.file.type,\n            size: `${values.file.size} bytes`\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsName\",\n        name: \"name\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsPassword\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSettings, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = UserSettings;\nexport default UserSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/userSettings/index.js"],"names":["React","useFormik","validate","values","errors","name","length","email","test","password","confirmPassword","UserSettings","formik","initialValues","file","onSubmit","alert","JSON","stringify","handleSubmit","event","setFieldValue","currentTarget","files","console","log","fileName","type","size","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useFormik } from \"formik\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  } else if (values.name.length > 15) {\n    errors.name = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n      values.password\n    )\n  ) {\n    errors.password =\n      \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n      values.confirmPassword\n    )\n  ) {\n    errors.confirmPassword =\n      \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match.\";\n  }\n\n  return errors;\n};\n\nconst UserSettings = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n\n      email: \"\",\n\n      password: \"\",\n\n      confirmPassword: \"\",\n\n      file: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <h1>User Settings:</h1>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"photo\">Photo</label>\n\n        <input\n          id=\"file\"\n          name=\"file\"\n          type=\"file\"\n          onChange={(event) => {\n            formik.setFieldValue(\"file\", event.currentTarget.files[0]);\n          }}\n          onSubmit={(values) => {\n            console.log({\n              fileName: values.file.name,\n              type: values.file.type,\n              size: `${values.file.size} bytes`,\n            });\n          }}\n        />\n\n        <label htmlFor=\"name\">Name</label>\n\n        <input\n          id=\"userSettingsName\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.name}\n        />\n\n        {formik.touched.name && formik.errors.name ? (\n          <div>{formik.errors.name}</div>\n        ) : null}\n\n        <label htmlFor=\"email\">Email Address</label>\n\n        <input\n          id=\"userSettingsEmail\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          id=\"userSettingsPassword\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n\n        <label htmlFor=\"confirmPassword\">Password</label>\n\n        <input\n          id=\"userSettingsConfirmPassword\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.confirmPassword}\n        />\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n          <div>{formik.errors.confirmPassword}</div>\n        ) : null}\n\n        <button type=\"submit\">Update Details</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserSettings;\n"]},"metadata":{},"sourceType":"module"}