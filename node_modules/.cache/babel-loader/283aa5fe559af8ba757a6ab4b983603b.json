{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords do not match.';\n  }\n\n  return errors;\n};\n\nconst Register = () => {\n  _s();\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 1\n  }, this);\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 62\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 60\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 54\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 62\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"confirmPassword\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.confirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.confirmPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 76\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js"],"names":["React","useFormik","validate","values","errors","firstName","length","lastName","email","test","password","confirmPassword","Register","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\n\n\n\nconst validate = values => {\n\n  const errors = {};\n\n  if (!values.firstName) {\n\n    errors.firstName = 'Required';\n\n  } else if (values.firstName.length > 15) {\n\n    errors.firstName = 'Must be 15 characters or less';\n\n  }\n\n\n\n  if (!values.lastName) {\n\n    errors.lastName = 'Required';\n\n  } else if (values.lastName.length > 20) {\n\n    errors.lastName = 'Must be 20 characters or less';\n\n  }\n\n\n\n  if (!values.email) {\n\n    errors.email = 'Required';\n\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n  if (!values.password) {\n\n    errors.password = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  }\n\n  if (!values.confirmPassword) {\n\n    errors.confirmPassword = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  } else if (values.password !== values.confirmPassword) {\n\n    errors.confirmPassword = 'Passwords do not match.'\n  }\n\n\n\n  return errors;\n\n};\n\n\n\nconst Register = () => {\n\n<div>\n    <h1>Register</h1>\n</div>\n\n  const formik = useFormik({\n      \n    initialValues: {\n        \n        firstName: '',\n        \n        lastName: '',\n        \n        email: '',\n        \n        password: '',\n        \n        confirmPassword: '',\n        \n    },\n    \n    validate,\n    \n    onSubmit: values => {\n        \n        alert(JSON.stringify(values, null, 2));\n        \n    },\n    \n});\n\n  return (\n\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"firstName\">First Name</label>\n\n      <input\n\nid=\"firstName\"\n\nname=\"firstName\"\n\ntype=\"text\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\n        value={formik.values.firstName}\n        \n        />\n\n      {formik.touched.firstName && formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\n\n      <label htmlFor=\"lastName\">Last Name</label>\n\n      <input\n\nid=\"lastName\"\n\nname=\"lastName\"\n\ntype=\"text\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.lastName}\n\n/>\n\n      {formik.touched.lastName && formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\nid=\"email\"\n\nname=\"email\"\n\ntype=\"email\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.email}\n\n/>\n\n      {formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"password\">Password</label>\n\n        <input\n\nid=\"password\"\n\nname=\"password\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.password}\n\n/>\n\n        {formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null}\n\n        <label htmlFor=\"confirmPassword\">Password</label>\n\n        <input\n\nid=\"confirmPassword\"\n\nname=\"confirmPassword\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.confirmPassword}\n\n/>\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? <div>{formik.errors.confirmPassword}</div> : null}\n\n      <button type=\"submit\">Submit</button>\n\n    </form>\n\n  );\n\n\n};\n\nexport default Register"]},"metadata":{},"sourceType":"module"}