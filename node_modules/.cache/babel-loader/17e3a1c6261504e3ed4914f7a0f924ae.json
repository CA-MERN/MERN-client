{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport UserSettings from \"./components/userSettings\";\nimport Preferences from \"./components/preferences\";\nimport \"./App.css\";\nimport Modal from \"react-modal\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nconst user = true;\n\nconst App = () => {\n  _s();\n\n  const modals = {\n    register: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this),\n    login: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this)\n  };\n  const [modalOpen, setModalOpen] = React.useState(null);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FridgeMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserSettings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Preferences, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalOpen(\"login\");\n          openModal();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalOpen(\"register\");\n          openModal();\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      ariaHideApp: false,\n      contentLabel: \"Example Modal\",\n      children: [modalOpen && modals[modalOpen], /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalOpen(\"login\");\n          openModal();\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalOpen(\"register\");\n          openModal();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // setModalOpen(\"register\");\n            closeModal();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \"Register\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Lyh5dfgUxt7hjcIl4Qbf1zhcYyU=\");\n\n_c = App;\nexport default App; // routes for later\n// HOME\n// /\n// SIGN IN PAGE\n// user/login\n// REGISTER PAGE\n// user/register\n// ACCOUNT SETTINGS PAGE\n// user/:username/account-settings\n// PREFRENCES PAGE\n// preferences/:username\n// FRIDGE PAGE\n// ingredients/:username/fridge\n// PANTRY PAGE\n// ingredients/:username/pantry\n// BROWSE RECIPE PAGE\n// /recipes/browse\n// SINGLE RECIPE\n// /recipes/:recipe-name\n// USER SAVED RECIPES\n// /saved-recipes/:username\n// also You need to add the massive ingredient JSON to your client repo when you do the autocmplete haha. If you pull the latest from server then you can move the file to a data file in the client :)\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/App.js"],"names":["React","Fragment","Login","Register","UserSettings","Preferences","Modal","customStyles","content","top","left","right","bottom","marginRight","transform","user","App","modals","register","login","modalOpen","setModalOpen","useState","modalIsOpen","setIsOpen","openModal","closeModal"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport UserSettings from \"./components/userSettings\";\nimport Preferences from \"./components/preferences\";\nimport \"./App.css\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst user = true;\n\nconst App = () => {\n  const modals = {\n    register: <Register />,\n    login: <Login />,\n  };\n  const [modalOpen, setModalOpen] = React.useState(null);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>FridgeMate</h1>\n      </div>\n      {user ? (\n        <Fragment>\n          <UserSettings /> <Preferences />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <button\n            onClick={() => {\n              setModalOpen(\"login\");\n              openModal();\n            }}\n          >\n            Login\n          </button>\n          <button\n            onClick={() => {\n              setModalOpen(\"register\");\n              openModal();\n            }}\n          >\n            Register\n          </button>\n        </Fragment>\n      )}\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n      >\n        {modalOpen && modals[modalOpen]}\n        <button\n          onClick={() => {\n            setModalOpen(\"login\");\n            openModal();\n          }}\n        >\n          Login\n        </button>\n        <button\n          onClick={() => {\n            setModalOpen(\"register\");\n            openModal();\n          }}\n        >\n          <button\n            onClick={() => {\n              // setModalOpen(\"register\");\n              closeModal();\n            }}\n          ></button>\n          Register\n        </button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n\n// routes for later\n\n// HOME\n// /\n\n// SIGN IN PAGE\n// user/login\n\n// REGISTER PAGE\n// user/register\n\n// ACCOUNT SETTINGS PAGE\n// user/:username/account-settings\n\n// PREFRENCES PAGE\n// preferences/:username\n\n// FRIDGE PAGE\n// ingredients/:username/fridge\n\n// PANTRY PAGE\n// ingredients/:username/pantry\n\n// BROWSE RECIPE PAGE\n// /recipes/browse\n\n// SINGLE RECIPE\n// /recipes/:recipe-name\n\n// USER SAVED RECIPES\n// /saved-recipes/:username\n\n// also You need to add the massive ingredient JSON to your client repo when you do the autocmplete haha. If you pull the latest from server then you can move the file to a data file in the client :)\n"]},"metadata":{},"sourceType":"module"}