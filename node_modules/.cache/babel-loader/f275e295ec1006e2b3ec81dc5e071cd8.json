{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords do not match.';\n  }\n\n  return errors;\n};\n\nconst Register = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 54\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerPassword\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 76\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js"],"names":["React","useFormik","validate","values","errors","email","test","password","confirmPassword","Register","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\n\n\n\nconst validate = values => {\n\n  const errors = {};\n\n  if (!values.email) {\n\n    errors.email = 'Required';\n\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n  if (!values.password) {\n\n    errors.password = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  }\n\n  if (!values.confirmPassword) {\n\n    errors.confirmPassword = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  } else if (values.password !== values.confirmPassword) {\n\n    errors.confirmPassword = 'Passwords do not match.'\n  }\n\n\n\n  return errors;\n\n};\n\n\n\nconst Register = () => {\n\n\n  const formik = useFormik({\n      \n    initialValues: {\n        \n        email: '',\n        \n        password: '',\n        \n        confirmPassword: '',\n        \n    },\n    \n    validate,\n    \n    onSubmit: values => {\n        \n        alert(JSON.stringify(values, null, 2));\n        \n    },\n    \n});\n\n  return (\n    <div>\n    <h1>Register:</h1>\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\nid=\"registerEmail\"\n\nname=\"email\"\n\ntype=\"email\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.email}\n\n/>\n\n      {formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"password\">Password</label>\n\n        <input\n\nid=\"registerPassword\"\n\nname=\"password\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.password}\n\n/>\n\n        {formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null}\n\n        <label htmlFor=\"confirmPassword\">Password</label>\n\n        <input\n\nid=\"registerConfirmPassword\"\n\nname=\"confirmPassword\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.confirmPassword}\n\n/>\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? <div>{formik.errors.confirmPassword}</div> : null}\n\n      <button type=\"submit\">Sign Up</button>\n\n    </form>\n</div>\n  );\n\n\n};\n\nexport default Register;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}