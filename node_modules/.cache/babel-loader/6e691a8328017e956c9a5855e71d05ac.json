{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n  //   errors.password = 'Invalid password';\n  // }\n\n\n  return errors;\n};\n\nconst Login = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"loginEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 54\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js"],"names":["React","useFormik","validate","values","errors","email","test","password","Login","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,QAA1B;;AAIA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AAEzB,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AAEjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AAED,GAJD,MAIO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDH,MAAM,CAACE,KAAxD,CAAL,EAAqE;AAE1ED,IAAAA,MAAM,CAACC,KAAP,GAAe,uBAAf;AAED;;AAED,MAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AAEpBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,UAAlB;AAED,GAlBwB,CAmBzB;AACA;AAEA;AAEA;;;AAGA,SAAOH,MAAP;AAED,CA7BD;;AAiCA,MAAMI,KAAK,GAAG,MAAM;AAAA;;AAGlB,QAAMC,MAAM,GAAGR,SAAS,CAAC;AAEvBS,IAAAA,aAAa,EAAE;AAEXL,MAAAA,KAAK,EAAE,EAFI;AAIXE,MAAAA,QAAQ,EAAE;AAJC,KAFQ;AAWvBL,IAAAA,QAXuB;AAavBS,IAAAA,QAAQ,EAAER,MAAM,IAAI;AAEhBS,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AAEH;AAjBsB,GAAD,CAAxB;AAqBA,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,QAAQ,EAAEM,MAAM,CAACM,YAAvB;AAAA,8BAEE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAEN,QAAA,EAAE,EAAC,YAFG;AAIN,QAAA,IAAI,EAAC,OAJC;AAMN,QAAA,IAAI,EAAC,OANC;AAQN,QAAA,QAAQ,EAAEN,MAAM,CAACO,YARX;AAUN,QAAA,MAAM,EAAEP,MAAM,CAACQ,UAVT;AAYN,QAAA,KAAK,EAAER,MAAM,CAACN,MAAP,CAAcE;AAZf;AAAA;AAAA;AAAA;AAAA,cAJF,EAoBGI,MAAM,CAACS,OAAP,CAAeb,KAAf,IAAwBI,MAAM,CAACL,MAAP,CAAcC,KAAtC,gBAA8C;AAAA,kBAAMI,MAAM,CAACL,MAAP,CAAcC;AAApB;AAAA;AAAA;AAAA;AAAA,cAA9C,GAAiF,IApBpF,eAsBE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAwBI;AAER,QAAA,EAAE,EAAC,UAFK;AAIR,QAAA,IAAI,EAAC,UAJG;AAMR,QAAA,IAAI,EAAC,UANG;AAQR,QAAA,QAAQ,EAAEI,MAAM,CAACO,YART;AAUR,QAAA,MAAM,EAAEP,MAAM,CAACQ,UAVP;AAYR,QAAA,KAAK,EAAER,MAAM,CAACN,MAAP,CAAcI;AAZb;AAAA;AAAA;AAAA;AAAA,cAxBJ,EAwCKE,MAAM,CAACS,OAAP,CAAeX,QAAf,IAA2BE,MAAM,CAACL,MAAP,CAAcG,QAAzC,gBAAoD;AAAA,kBAAME,MAAM,CAACL,MAAP,CAAcG;AAApB;AAAA;AAAA;AAAA;AAAA,cAApD,GAA0F,IAxC/F,eA0CE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CA5ED;;GAAMC,K;UAGWP,S;;;KAHXO,K;AA8EN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\n\n\n\nconst validate = values => {\n\n  const errors = {};\n\n  if (!values.email) {\n\n    errors.email = 'Required';\n\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n  if (!values.password) {\n\n    errors.password = 'Required';\n\n  } \n  // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n\n  //   errors.password = 'Invalid password';\n\n  // }\n\n\n  return errors;\n\n};\n\n\n\nconst Login = () => {\n\n\n  const formik = useFormik({\n      \n    initialValues: {\n        \n        email: '',\n        \n        password: '',\n\n        \n    },\n    \n    validate,\n    \n    onSubmit: values => {\n        \n        alert(JSON.stringify(values, null, 2));\n        \n    },\n    \n});\n\n  return (\n    <div>\n    <h1>Log In:</h1>\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\nid=\"loginEmail\"\n\nname=\"email\"\n\ntype=\"email\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.email}\n\n/>\n\n      {formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"password\">Password</label>\n\n        <input\n\nid=\"password\"\n\nname=\"password\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.password}\n\n/>\n\n        {formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null}\n\n      <button type=\"submit\">Submit</button>\n\n    </form>\n</div>\n  );\n\n\n};\n\nexport default Login;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}