{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/preferences/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n\nconst validate = values => {\n  // const errors = {};\n  // if (!values.email) {\n  //   errors.email = 'Required';\n  // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n  //   errors.email = 'Invalid email address';\n  // }\n  // if (!values.password) {\n  //   errors.password = 'Required';\n  // }\n  // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n  //   errors.password = 'Invalid password';\n  // }\n  // return errors;\n  return \"Poops\";\n};\n\nimport { useFormik } from \"formik\";\n\nconst Preferences = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"loginEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"loginPassword\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preferences, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Preferences;\nexport default Preferences;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/preferences/index.js"],"names":["React","validate","values","useFormik","Preferences","formik","initialValues","email","password","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,OAAP;AACD,CAhBD;;AAkBA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGF,SAAS,CAAC;AACvBG,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KADQ;AAOvBP,IAAAA,QAPuB;AASvBQ,IAAAA,QAAQ,EAAGP,MAAD,IAAY;AACpBQ,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeV,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AAXsB,GAAD,CAAxB;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEG,MAAM,CAACQ,YAAvB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,QAAQ,EAAER,MAAM,CAACS,YAJnB;AAKE,QAAA,MAAM,EAAET,MAAM,CAACU,UALjB;AAME,QAAA,KAAK,EAAEV,MAAM,CAACH,MAAP,CAAcK;AANvB;AAAA;AAAA;AAAA;AAAA,cAHF,EAYGF,MAAM,CAACW,OAAP,CAAeT,KAAf,IAAwBF,MAAM,CAACY,MAAP,CAAcV,KAAtC,gBACC;AAAA,kBAAMF,MAAM,CAACY,MAAP,CAAcV;AAApB;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IAdN,eAgBE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAkBE;AACE,QAAA,EAAE,EAAC,eADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEF,MAAM,CAACS,YAJnB;AAKE,QAAA,MAAM,EAAET,MAAM,CAACU,UALjB;AAME,QAAA,KAAK,EAAEV,MAAM,CAACH,MAAP,CAAcM;AANvB;AAAA;AAAA;AAAA;AAAA,cAlBF,EA2BGH,MAAM,CAACW,OAAP,CAAeR,QAAf,IAA2BH,MAAM,CAACY,MAAP,CAAcT,QAAzC,gBACC;AAAA,kBAAMH,MAAM,CAACY,MAAP,CAAcT;AAApB;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,IA7BN,eA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CArDD;;GAAMJ,W;UACWD,S;;;KADXC,W;AAuDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\nconst validate = (values) => {\n  // const errors = {};\n  // if (!values.email) {\n  //   errors.email = 'Required';\n  // } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n  //   errors.email = 'Invalid email address';\n  // }\n  // if (!values.password) {\n  //   errors.password = 'Required';\n  // }\n  // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n  //   errors.password = 'Invalid password';\n  // }\n  // return errors;\n  return \"Poops\";\n};\n\nimport { useFormik } from \"formik\";\n\nconst Preferences = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n\n      password: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <h1>Log In:</h1>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"email\">Email Address</label>\n\n        <input\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n\n        <button type=\"submit\">Log In</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Preferences;\n"]},"metadata":{},"sourceType":"module"}