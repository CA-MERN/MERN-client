{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Must be I dunno';\n  } else if (!/^[A-Z0-9._%+-]$/i.test(values.password)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst Register = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 34\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 30\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: formik.handleChange,\n      value: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 35\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js"],"names":["React","useFormik","validate","values","errors","firstName","length","lastName","email","test","password","Register","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useFormik } from 'formik';\n\n\n\nconst validate = values => {\n\n  const errors = {};\n\n  if (!values.firstName) {\n\n    errors.firstName = 'Required';\n\n  } else if (values.firstName.length > 15) {\n\n    errors.firstName = 'Must be 15 characters or less';\n\n  }\n\n\n\n  if (!values.lastName) {\n\n    errors.lastName = 'Required';\n\n  } else if (values.lastName.length > 20) {\n\n    errors.lastName = 'Must be 20 characters or less';\n\n  }\n\n\n\n  if (!values.email) {\n\n    errors.email = 'Required';\n\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n  if (!values.password) {\n\n    errors.password = 'Must be I dunno';\n\n  } else if (!/^[A-Z0-9._%+-]$/i.test(values.password)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n\n\n\n  return errors;\n\n};\n\n\n\nconst Register = () => {\n\n\n  const formik = useFormik({\n\n    initialValues: {\n\n      firstName: '',\n\n      lastName: '',\n\n      email: '',\n\n      password: ''\n\n    },\n\n    validate,\n\n    onSubmit: values => {\n\n      alert(JSON.stringify(values, null, 2));\n\n    },\n\n  });\n\n  return (\n\n    <form onSubmit={formik.handleSubmit}>\n\n      <label htmlFor=\"firstName\">First Name</label>\n\n      <input\n\n        id=\"firstName\"\n\n        name=\"firstName\"\n\n        type=\"text\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.firstName}\n\n      />\n\n      {formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\n\n      <label htmlFor=\"lastName\">Last Name</label>\n\n      <input\n\n        id=\"lastName\"\n\n        name=\"lastName\"\n\n        type=\"text\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.lastName}\n\n      />\n\n      {formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\n        id=\"email\"\n\n        name=\"email\"\n\n        type=\"email\"\n\n        onChange={formik.handleChange}\n\n        value={formik.values.email}\n\n      />\n\n      {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"password\">Password</label>\n\n        <input\n\n            id=\"password\"\n\n            name=\"password\"\n\n            type=\"password\"\n\n            onChange={formik.handleChange}\n\n            value={formik.values.password}\n\n        />\n\n        {formik.errors.password ? <div>{formik.errors.password}</div> : null}\n\n      <button type=\"submit\">Submit</button>\n\n    </form>\n\n  );\n\n};\n\nexport default Register"]},"metadata":{},"sourceType":"module"}