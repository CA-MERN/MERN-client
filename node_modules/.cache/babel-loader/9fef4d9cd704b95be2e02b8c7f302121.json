{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFormik } from \"formik\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nconst Login = ({\n  actions,\n  loggedIn\n}) => {\n  _s();\n\n  console.log(\"are we logged in\", loggedIn);\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"loginEmail\",\n        name: \"email\",\n        type: \"email\",\n        class: \"loginEmail\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"loginPassword\",\n        name: \"password\",\n        type: \"password\",\n        class: \"loginPassword\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: actions.logIn,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: actions.logout,\n        children: \"log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  loggedIn: state.authentication.loggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: {\n    logIn: () => dispatch({\n      type: \"login\"\n    }),\n    logout: () => dispatch({\n      type: \"logout\"\n    })\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js"],"names":["React","connect","useFormik","validate","values","errors","email","test","password","Login","actions","loggedIn","console","log","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","logIn","logout","mapStateToProps","state","authentication","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useFormik } from \"formik\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  return errors;\n};\n\nconst Login = ({ actions, loggedIn }) => {\n  console.log(\"are we logged in\", loggedIn);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n\n      password: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <h1>Log In:</h1>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"email\">Email Address</label>\n\n        <input\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          class=\"loginEmail\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          class=\"loginPassword\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n\n        <button type=\"submit\" onClick={actions.logIn}>\n          Log In\n        </button>\n        <button onClick={actions.logout}>log out</button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.authentication.loggedIn,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: {\n    logIn: () => dispatch({ type: \"login\" }),\n    logout: () => dispatch({ type: \"logout\" }),\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}