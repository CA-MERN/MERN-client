{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/userSettings/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, useFormik, setFieldValue } from 'formik';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length > 15) {\n    errors.name = 'Must be 15 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'Required';\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords do not match.';\n  }\n\n  return errors;\n};\n\nconst UserSettings = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      file: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Settings:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"photo\",\n        children: \"Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file\",\n        name: \"file\",\n        type: \"file\",\n        onChange: event => {\n          setFieldValue(\"file\", event.currentTarget.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsName\",\n        name: \"name\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), formik.touched.name && formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 52\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 54\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsPassword\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 62\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userSettingsConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 76\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSettings, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = UserSettings;\nexport default UserSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/userSettings/index.js"],"names":["React","Formik","useFormik","setFieldValue","validate","values","errors","name","length","email","test","password","confirmPassword","UserSettings","formik","initialValues","file","onSubmit","alert","JSON","stringify","handleSubmit","event","currentTarget","files","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Formik, useFormik, setFieldValue } from 'formik';\n\nconst validate = values => {\n\n  const errors = {};\n\n  if (!values.name) {\n\n    errors.name = 'Required';\n\n  } else if (values.name.length > 15) {\n\n    errors.name = 'Must be 15 characters or less';\n\n  }\n\n  if (!values.email) {\n\n    errors.email = 'Required';\n\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\n    errors.email = 'Invalid email address';\n\n  }\n\n  if (!values.password) {\n\n    errors.password = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n\n    errors.password = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  }\n\n  if (!values.confirmPassword) {\n\n    errors.confirmPassword = 'Required';\n\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.confirmPassword)) {\n\n    errors.confirmPassword = 'Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.';\n\n  } else if (values.password !== values.confirmPassword) {\n\n    errors.confirmPassword = 'Passwords do not match.'\n  }\n\n\n\n  return errors;\n\n};\n\n\n\nconst UserSettings = () => {\n\n\n  const formik = useFormik({\n      \n    initialValues: {\n        \n        name: '',\n        \n        email: '',\n        \n        password: '',\n        \n        confirmPassword: '',\n\n        file: '',\n        \n    },\n    \n    validate,\n    \n    onSubmit: values => {\n        \n        alert(JSON.stringify(values, null, 2));\n        \n    },\n    \n});\n\n  return (\n    <div>\n    <h1>User Settings:</h1>\n    <form onSubmit={formik.handleSubmit}>\n\n    <label htmlFor=\"photo\">Photo</label>\n\n    <input \n    id=\"file\" \n    name=\"file\" \n    type=\"file\" onChange={(event) => {\n  setFieldValue(\"file\", event.currentTarget.files[0]);\n}} />\n\n      <label htmlFor=\"name\">Name</label>\n\n      <input\n\nid=\"userSettingsName\"\n\nname=\"name\"\n\ntype=\"text\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\n        value={formik.values.name}\n        \n        />\n\n      {formik.touched.name && formik.errors.name ? <div>{formik.errors.name}</div> : null}\n\n\n      <label htmlFor=\"email\">Email Address</label>\n\n      <input\n\nid=\"userSettingsEmail\"\n\nname=\"email\"\n\ntype=\"email\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.email}\n\n/>\n\n      {formik.touched.email && formik.errors.email ? <div>{formik.errors.email}</div> : null}\n\n      <label htmlFor=\"password\">Password</label>\n\n        <input\n\nid=\"userSettingsPassword\"\n\nname=\"password\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.password}\n\n/>\n\n        {formik.touched.password && formik.errors.password ? <div>{formik.errors.password}</div> : null}\n\n        <label htmlFor=\"confirmPassword\">Password</label>\n\n        <input\n\nid=\"userSettingsConfirmPassword\"\n\nname=\"confirmPassword\"\n\ntype=\"password\"\n\nonChange={formik.handleChange}\n\nonBlur={formik.handleBlur}\n\nvalue={formik.values.confirmPassword}\n\n/>\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? <div>{formik.errors.confirmPassword}</div> : null}\n\n      <button type=\"submit\">Update Details</button>\n\n    </form>\n</div>\n  );\n\n\n};\n\n\n\n\nexport default UserSettings;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}