{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport { useFormik } from \"formik\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n  //   errors.password = 'Invalid password';\n  // }\n\n\n  return errors;\n};\n\nconst Login = () => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      ariaHideApp: false,\n      contentLabel: \"Example Modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log In:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loginEmail\",\n          name: \"email\",\n          type: \"email\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"loginPassword\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"aihGenu6dC52hwAv1Or6kYRXRs0=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/login/index.js"],"names":["React","Modal","useFormik","customStyles","content","top","left","right","bottom","marginRight","transform","validate","values","errors","email","test","password","Login","modalIsOpen","setIsOpen","useState","openModal","closeModal","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport { useFormik } from \"formik\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  // not on log in??\n  // else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n\n  //   errors.password = 'Invalid password';\n\n  // }\n\n  return errors;\n};\n\nconst Login = () => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n\n      password: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n      >\n        <button onClick={closeModal}>cancel</button>\n        <h1>Log In:</h1>\n        <form onSubmit={formik.handleSubmit}>\n          <label htmlFor=\"email\">Email Address</label>\n\n          <input\n            id=\"loginEmail\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n\n          <label htmlFor=\"password\">Password</label>\n\n          <input\n            id=\"loginPassword\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n\n          {formik.touched.password && formik.errors.password ? (\n            <div>{formik.errors.password}</div>\n          ) : null}\n\n          <button type=\"submit\">Log In</button>\n        </form>\n      </Modal>\n      <button onClick={openModal}>Login</button>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}