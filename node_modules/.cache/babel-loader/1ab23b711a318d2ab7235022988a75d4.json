{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(values.password)) {\n    errors.password = \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\"; // I feel like we don't need this twice>\n    // } else if (\n    //   !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n    //     values.confirmPassword\n    //   )\n    // ) {\n    //   errors.confirmPassword =\n    //     \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match.\";\n  }\n\n  return errors;\n};\n\nconst Register = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerEmail\",\n        class: \"registerEmail\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerPassword\",\n        class: \"registerPassword\",\n        name: \"password\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registerConfirmPassword\",\n        class: \"registerConfirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/Adrienne/Desktop/MERN/mern-client/src/components/register/index.js"],"names":["React","useFormik","validate","values","errors","email","test","password","confirmPassword","Register","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { useFormik } from \"formik\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n      values.password\n    )\n  ) {\n    errors.password =\n      \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n    // I feel like we don't need this twice>\n    // } else if (\n    //   !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/i.test(\n    //     values.confirmPassword\n    //   )\n    // ) {\n    //   errors.confirmPassword =\n    //     \"Password must contain 8 characters, with 1 upper and lower case character, 1 number and 1 special character.\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match.\";\n  }\n\n  return errors;\n};\n\nconst Register = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n\n      password: \"\",\n\n      confirmPassword: \"\",\n    },\n\n    validate,\n\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <div>\n      <h1>Register:</h1>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"email\">Email Address</label>\n\n        <input\n          id=\"registerEmail\"\n          class=\"registerEmail\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n        />\n\n        {formik.touched.email && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          id=\"registerPassword\"\n          class=\"registerPassword\"\n          name=\"password\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n\n        {formik.touched.password && formik.errors.password ? (\n          <div>{formik.errors.password}</div>\n        ) : null}\n\n        <label htmlFor=\"confirmPassword\">Confirm Password</label>\n\n        <input\n          id=\"registerConfirmPassword\"\n          class=\"registerConfirmPassword\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.confirmPassword}\n        />\n\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n          <div>{formik.errors.confirmPassword}</div>\n        ) : null}\n\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}